#!/usr/bin/env python
# -*- coding: utf-8 -*-
import sys
import logging
import logging.handlers
import argparse
from netcop.despachante import Despachante, models


# Manejo de argumentos
# ---------------------------------------------------------------------------
parser = argparse.ArgumentParser()
parser.add_argument("-t", "--temporizado",
                    help="Ejecuta el script en modo temporizado. Si no es "
                         "necesario un despacho nuevo, no hace nada.",
                    action="store_true")
parser.add_argument("-d", "--debug",
                    help="Activa el modo DEBUG",
                    action="store_true")
args = parser.parse_args()

# Configuro logging
# ---------------------------------------------------------------------------
log = logging.getLogger()
if args.debug:
    log.setLevel(logging.DEBUG)
    log.addHandler(logging.StreamHandler())
else:
    log.setLevel(logging.INFO)
    log.addHandler(logging.handlers.SysLogHandler(address='/dev/log'))

try:
    log.debug("[*] Conectando base de datos")
    models.db.connect()
    despachante = Despachante()
    programado = args.temporizado
    necesario = despachante.despacho_necesario()
    log.debug("[*] Despacho programado: %s" % programado)
    log.debug("[*] Despacho necesario: %s" % necesario)
    if not programado or necesario:
        log.info("Despachando politicas")
        despachante.despachar()
        log.info("El despacho fue exitoso")
    else:
        log.info("No hay necesidad de despacho")
except Exception as e:
    log.exception("Error fatal: %s" % str(e))
finally:
    if not models.db.is_closed():
        log.debug("[*] Cerrando base de datos")
        models.db.close()
